// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TpixAPI.Models;
using TpixAPI.Data;

namespace TpixAPI.Migrations
{
    [DbContext(typeof(TpixContext))]
    partial class TpixContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TpixAPI.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("FkCreatedBy")
                        .HasColumnName("FK_CreatedBy");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(300);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("FkCreatedBy");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("TpixAPI.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("UQ__Member__A9D105347DA6888F");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasName("UQ__Member__536C85E439ECE2C6");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("TpixAPI.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("FkCreatedBy")
                        .HasColumnName("FK_CreatedBy");

                    b.Property<int>("FkParentTopicId")
                        .HasColumnName("FK_ParentTopicId");

                    b.Property<string>("MainBody")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.HasKey("Id");

                    b.HasIndex("FkCreatedBy");

                    b.HasIndex("FkParentTopicId");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("TpixAPI.Models.Report", b =>
                {
                    b.Property<int>("FkTopicId")
                        .HasColumnName("FK_TopicId");

                    b.Property<int>("FkMemberReportedId")
                        .HasColumnName("FK_MemberReportedId");

                    b.Property<int>("FkPostId")
                        .HasColumnName("FK_PostId");

                    b.Property<int>("FkReportingMemberId")
                        .HasColumnName("FK_ReportingMemberId");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Reason")
                        .HasMaxLength(500);

                    b.HasKey("FkTopicId", "FkMemberReportedId", "FkPostId", "FkReportingMemberId");

                    b.HasIndex("FkMemberReportedId");

                    b.HasIndex("FkPostId");

                    b.HasIndex("FkReportingMemberId");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("TpixAPI.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("FkCategoryId")
                        .HasColumnName("FK_CategoryId");

                    b.Property<int>("FkCreatedBy")
                        .HasColumnName("FK_CreatedBy");

                    b.Property<string>("ImgUrl");

                    b.Property<string>("MainBody")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("FkCategoryId");

                    b.HasIndex("FkCreatedBy");

                    b.ToTable("Topic");
                });

            modelBuilder.Entity("TpixAPI.Models.VotePost", b =>
                {
                    b.Property<int>("FkPostId")
                        .HasColumnName("FK_PostId");

                    b.Property<int>("FkMemberId")
                        .HasColumnName("FK_MemberId");

                    b.Property<int>("VoteValue");

                    b.HasKey("FkPostId", "FkMemberId");

                    b.ToTable("VotePost");
                });

            modelBuilder.Entity("TpixAPI.Models.VoteTopic", b =>
                {
                    b.Property<int>("FkTopicId")
                        .HasColumnName("FK_TopicId");

                    b.Property<int>("FkMemberId")
                        .HasColumnName("FK_MemberId");

                    b.Property<int>("VoteValue");

                    b.HasKey("FkTopicId", "FkMemberId");

                    b.ToTable("VoteTopic");
                });

            modelBuilder.Entity("TpixAPI.Models.Category", b =>
                {
                    b.HasOne("TpixAPI.Models.Member", "FkCreatedByNavigation")
                        .WithMany("Category")
                        .HasForeignKey("FkCreatedBy")
                        .HasConstraintName("FK__Category__FK_Cre__06CD04F7");
                });

            modelBuilder.Entity("TpixAPI.Models.Post", b =>
                {
                    b.HasOne("TpixAPI.Models.Member", "FkCreatedByNavigation")
                        .WithMany("Post")
                        .HasForeignKey("FkCreatedBy")
                        .HasConstraintName("FK__Post__FK_Created__0E6E26BF");

                    b.HasOne("TpixAPI.Models.Topic", "FkParentTopic")
                        .WithMany("Post")
                        .HasForeignKey("FkParentTopicId")
                        .HasConstraintName("FK__Post__FK_ParentT__0D7A0286");
                });

            modelBuilder.Entity("TpixAPI.Models.Report", b =>
                {
                    b.HasOne("TpixAPI.Models.Member", "FkMemberReported")
                        .WithMany("ReportFkMemberReported")
                        .HasForeignKey("FkMemberReportedId")
                        .HasConstraintName("FK__Report__FK_Membe__160F4887");

                    b.HasOne("TpixAPI.Models.Post", "FkPost")
                        .WithMany("Report")
                        .HasForeignKey("FkPostId")
                        .HasConstraintName("FK__Report__FK_PostI__18EBB532");

                    b.HasOne("TpixAPI.Models.Member", "FkReportingMember")
                        .WithMany("ReportFkReportingMember")
                        .HasForeignKey("FkReportingMemberId")
                        .HasConstraintName("FK__Report__FK_Repor__17036CC0");

                    b.HasOne("TpixAPI.Models.Topic", "FkTopic")
                        .WithMany("Report")
                        .HasForeignKey("FkTopicId")
                        .HasConstraintName("FK__Report__FK_Topic__17F790F9");
                });

            modelBuilder.Entity("TpixAPI.Models.Topic", b =>
                {
                    b.HasOne("TpixAPI.Models.Category", "FkCategory")
                        .WithMany("Topic")
                        .HasForeignKey("FkCategoryId")
                        .HasConstraintName("FK__Topic__FK_Catego__09A971A2");

                    b.HasOne("TpixAPI.Models.Member", "FkCreatedByNavigation")
                        .WithMany("Topic")
                        .HasForeignKey("FkCreatedBy")
                        .HasConstraintName("FK__Topic__FK_Create__0A9D95DB");
                });
#pragma warning restore 612, 618
        }
    }
}
